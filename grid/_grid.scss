$screen: xl !default;

$grid-column-count: 12;
$grid-gutter-width: 6px;

%grid-clearfix {
	&:before, &:after {
		content: " ";
		display: table;
	}

	&:after {
		clear: both;
	}
}

@mixin grid-if($screens: xs sm md lg xl) {
	@each $_screen in $screens {
		@if $_screen == $screen {
			@content;
		}
	}
}

@mixin grid-row($screens: xs sm md lg xl) {
	@include grid-if($screens) {
		@extend %grid-clearfix;

		margin: {
			left: -$grid-gutter-width;
			right: -$grid-gutter-width;
		}

		@content;
	}
}

@mixin grid-container($cols, $screens: xs sm md lg xl) {
	@include grid-if($screens) {
		@extend %grid-clearfix;

		width: 100% / $grid-column-count * $cols;
		position: relative;
		min-height: 1px;
		box-sizing: border-box;

		@if $cols == $grid-column-count {
			float: none;
			clear: both;
		}

		@if $cols < $grid-column-count {
			float: left;
			clear: none;
		}

		@content;
	}
}

@mixin grid-col($cols, $screens: xs sm md lg xl) {
	@include grid-container($cols, $screens) {
		padding-left: $grid-gutter-width;
		padding-right: $grid-gutter-width;

		@content;
	}
}

@mixin grid-pull($cols, $screens: xs sm md lg xl) {
	@include grid-if($screens) {
		right: 100% / $grid-column-count * $cols;
	}
}

@mixin grid-push($cols, $screens: xs sm md lg xl) {
	@include grid-if($screens) {
		left: 100% / $grid-column-count * $cols;
	}
}

@mixin grid-offset($cols, $screens: xs sm md lg xl) {
	@include grid-if($screens) {
		margin-left: 100% / $grid-column-count * $cols;
	}
}

.row {
	@include grid-row();
}

$screens: xs sm md lg xl;

@each $s in sm md lg xl {
	.show-#{$s} {
		@if index($screens, $screen) > index($screens, $s) {
			display: none !important;
		}
	}
}

@each $s in xs sm md lg {
	.gd-hide-#{$s} {
		@if index($screens, $screen) <= index($screens, $s) {
			display: none !important;
		}
	}
}

.container {
	position: relative;
	min-height: 1px;
	box-sizing: border-box;
	float: left;
	clear: none;
}

.col {
	@extend .gd-container;

	padding-left: 6px;
	padding-right: 6px;
}

@each $s in xs sm md lg xl {
	@for $c from 1 through $grid-column-count {
		.col-#{$s}-#{$c} {
			@extend .gd-col;
		}

		.container-#{$s}-#{$c} {
			@extend .gd-container;
		}

		.col-#{$s}-#{$c}, .gd-container-#{$s}-#{$c} {
			@if index($screens, $s) == index($screens, $screen) {
				width: 100% / $grid-column-count * $c !important;
			} @elseif index($screens, $s) < index($screens, $screen) {
				width: 100% / $grid-column-count * $c;
			} @else {
				width: 100%;
			}
		}

		.offset-#{$s}-#{$c} {
			@if index($screens, $s) == index($screens, $screen) {
				margin-left: 100% / $grid-column-count * $c !important;
			} @elseif index($screens, $s) < index($screens, $screen) {
				margin-left: 100% / $grid-column-count * $c;
			}
		}

		.push-#{$s}-#{$c} {
			@if index($screens, $s) == index($screens, $screen) {
				left: 100% / $grid-column-count * $c !important;
			} @elseif index($screens, $s) < index($screens, $screen) {
				left: 100% / $grid-column-count * $c;
			}
		}

		.pull-#{$s}-#{$c} {
			@if index($screens, $s) == index($screens, $screen) {
				right: 100% / $grid-column-count * $c !important;
			} @elseif index($screens, $s) < index($screens, $screen) {
				right: 100% / $grid-column-count * $c;
			}
		}
	}
}
